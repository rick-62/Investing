# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/04_user_guide/04_data_catalog.html


_csv: &csv
  type: pandas.CSVDataSet
  fs_args:
    open_args_save:
      mode: "wb"
      encoding: "utf-8"


######################################
##### P100_ext_freetrade
######################################

raw_csv_freetrade:
  type: pandas.CSVDataSet
  filepath: ${data_parent}\01_raw\manual\freetrade_stocks.csv

int_csv_freetrade_cleansed:
  filepath: ${data_parent}\02_intermediate\freetrade_cleansed.csv
  <<: *csv
  

######################################
##### P110_ext_portfolio
######################################

raw_csv_portfolio:
  type: pandas.CSVDataSet
  filepath: ${data_parent}\01_raw\manual\portfolio.csv

inmem_portfolio_cleansed:
  type: MemoryDataSet

primary_csv_current_holdings:
  type: pandas.CSVDataSet
  filepath: ${data_parent}\03_primary\current_holdings.csv


######################################
##### P120_ext_investpy
######################################

raw_csv_investpy_stocks:
  filepath: ${data_parent}\01_raw\investpy\stocks.csv
  <<: *csv

raw_csv_investpy_etfs:
  filepath: ${data_parent}\01_raw\investpy\etfs.csv
  <<: *csv

raw_csv_investpy_indices:
  filepath: ${data_parent}\01_raw\investpy\indices.csv
  <<: *csv
  
int_csv_freetrade_investpy_etf_list:
  filepath: ${data_parent}\02_intermediate\freetrade_investpy_etfs.csv
  <<: *csv
  
raw_parts_investpy_etf_historic:
  type: PartitionedDataSet
  path: ${data_parent}\01_raw\investpy\historic
  filename_suffix: ".csv"
  dataset: 
    type: pandas.CSVDataSet
    save_args:
      index: True

raw_parts_investpy_etf_information:
  type: PartitionedDataSet
  path: ${data_parent}\01_raw\investpy\information
  filename_suffix: ".json"
  dataset:
    type: json.JSONDataSet

######################################
##### P130_ext_alpha_vantage
######################################

raw_parts_alphavantage_etf_historic:
  type: PartitionedDataSet
  path: ${data_parent}\01_raw\alpha_vantage\historic
  filename_suffix: ".csv"
  dataset: 
    type: pandas.CSVDataSet
    save_args:
      index: True

int_parts_alphavantage_etf_historic_cleansed:
  type: PartitionedDataSet
  path: ${data_parent}\02_intermediate\alpha_vantage\historic
  filename_suffix: ".csv"
  dataset: 
    type: pandas.CSVDataSet

######################################
##### P140_ext_yahoo
######################################




######################################
##### P200_eng_dividends
######################################

primary_csv_etf_latest_dividends:
  filepath: ${data_parent}\03_primary\latest_dividends_etfs.csv
  <<: *csv
  
  
######################################
##### P210_eng_stock_objects
######################################

primary_parts_ETF_stock_objects:
  type: PartitionedDataSet
  path: ${data_parent}\03_primary\stock_objects
  filename_suffix: ".pkl"
  dataset: 
    type: pickle.PickleDataSet
    
    
######################################
##### P300_strat001_hma_distributions
######################################

strat001_inmem_filtered_stocks:
  type: MemoryDataSet









etf_information:
  type: pandas.CSVDataSet
  filepath: ${data_parent}\03_primary\etf_information.csv






######################################
##### Prophet model
######################################

etf_forecasts:
  type: PartitionedDataSet
  path: ${data_parent}\07_model_output\prophet
  filename_suffix: ".csv"
  dataset:
    type: pandas.CSVDataSet
    save_args:
      index: True

etf_forecast_master:
  type: pandas.CSVDataSet
  filepath: ${data_parent}\03_primary\etf_forecast.csv



######################################
##### Reporting
######################################

etf_summary:
  filepath: ${data_parent}\03_primary\etf_daily_summary.csv
  <<: *csv

etf_sell:
  filepath: ${data_parent}\08_reporting\etf_sell.csv
  <<: *csv

etf_buy:
  filepath: ${data_parent}\08_reporting\etf_buy.csv
  <<: *csv